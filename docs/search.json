[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Posts",
    "section": "",
    "text": "Date\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\nSep 30, 2022\n\n\nExplore data\n\n\nRenato Hermoza\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "nbs/30092022_explore-data.html",
    "href": "nbs/30092022_explore-data.html",
    "title": "Explore data",
    "section": "",
    "text": "Last execution time: 18/01/2023 22:18:44\n\n\n\n\nCode\nexplore_types = ['frutas', 'lacteos', 'verduras', 'embutidos', 'panaderia', 'desayuno', 'congelados', 'abarrotes',\n                 'aves', 'carnes', 'pescados']\n\n\n\n\nCode\npath = Path('../../output')\ncsv_files = L(path.glob('*.csv')).filter(lambda o: os.stat(o).st_size>0)\npat_store = re.compile('(.+)\\_\\d+')\npat_date = re.compile('.+\\_(\\d+)')\ndf = (\n    pd.concat([pd.read_csv(o).assign(store=pat_store.match(o.stem)[1], date=pat_date.match(o.stem)[1])\n               for o in csv_files])\n    .pipe(lambda d: d.assign(\n        name=d.name.str.lower()+' ('+d.store+')',\n        sku=d.id.where(d.sku.isna(), d.sku).astype(int),\n        date=pd.to_datetime(d.date)\n    ))\n    .drop('id', axis=1)\n    .loc[lambda d: d.category.str.contains('|'.join(explore_types))]\n)\ndf.sample(3)\n\n\n\n\n\nData table\n  \n    \n      \n      brand\n      uri\n      name\n      price\n      category\n      store\n      date\n      sku\n    \n  \n  \n    \n      2961\n      Metro\n      https://www.metro.pe/pan-integral-metro-900-g-...\n      pan integral metro 900 g (metro)\n      15.20\n      https://www.metro.pe/desayuno/panes-y-tortilla...\n      metro\n      2023-01-05\n      32113\n    \n    \n      4423\n      SUNKA\n      https://www.plazavea.com.pe/coca-sunka-caja-20...\n      coca sunka caja 20un (plaza_vea)\n      5.59\n      https://www.plazavea.com.pe/desayunos\n      plaza_vea\n      2022-10-31\n      10701845\n    \n    \n      2919\n      La Panadería\n      https://www.metro.pe/pan-coliza-la-panaderia-x...\n      pan coliza la panadería x 5 unid (metro)\n      3.90\n      https://www.metro.pe/panaderia-y-pasteleria/la...\n      metro\n      2022-12-12\n      4112\n    \n  \n\n\n\n\n\n\nCode\ntop_changes = (df\n .groupby(['store','sku'], as_index=False)\n .price\n .agg('std')\n .query('price>0')\n .sort_values('price', ascending=False)\n)\ntop_changes.head()\n\n\n\n\n\n\n  \n    \n      \n      store\n      sku\n      price\n    \n  \n  \n    \n      9634\n      plaza_vea\n      10089986\n      50.192285\n    \n    \n      4246\n      metro\n      959183\n      39.125000\n    \n    \n      11631\n      plaza_vea\n      10734131\n      29.025782\n    \n    \n      11698\n      plaza_vea\n      10753106\n      25.819889\n    \n    \n      9062\n      plaza_vea\n      10039597\n      22.198705\n    \n  \n\n\n\n\n\n\nCode\n(top_changes\n .head(10)\n .drop('price', axis=1)\n .merge(df, on=['store','sku'])\n .pipe(alt.Chart)\n .mark_line(point=True)\n .encode(x='date', y='price', color='name', tooltip=['name','price'])\n .properties(width=650, title='Top changes')\n .configure_legend(orient='top', columns=3)\n)\n\n\n\n\n\n\n\n\n\nCode\ntop_drops = (df\n .sort_values('date')\n .pipe(lambda d: d.assign(**d\n     .groupby(['store','sku'], as_index=False).price\n     .transform(lambda d: d.rolling(3).mean())\n     .loc[:,['price']]\n ))\n .dropna()\n .groupby(['store','sku'], as_index=False)\n .price\n .agg(['first','last'])\n .assign(diff=lambda d: d['last']-d['first'])\n .reset_index()\n .sort_values('diff')\n)\ntop_drops.head()\n\n\n\n\n\n\n  \n    \n      \n      store\n      sku\n      first\n      last\n      diff\n    \n  \n  \n    \n      6326\n      plaza_vea\n      43433\n      159.0\n      103.363333\n      -55.636667\n    \n    \n      3956\n      metro\n      959183\n      156.5\n      104.333333\n      -52.166667\n    \n    \n      8665\n      plaza_vea\n      10734126\n      156.6\n      118.200000\n      -38.400000\n    \n    \n      8132\n      plaza_vea\n      10523087\n      79.9\n      53.293333\n      -26.606667\n    \n    \n      7078\n      plaza_vea\n      10043432\n      140.8\n      119.000000\n      -21.800000\n    \n  \n\n\n\n\n\n\nCode\n(top_drops\n .head(10)\n .loc[:, ['store','sku']]\n .merge(df, on=['store','sku'])\n .pipe(alt.Chart)\n .mark_line(point=True)\n .encode(x='date', y='price', color='name', tooltip=['name','price'])\n .properties(width=650, title='Top drops')\n .configure_legend(orient='top', columns=3)\n)\n\n\n\n\n\n\n\n\n\nCode\n(top_drops\n .tail(10)\n .loc[:, ['store','sku']]\n .merge(df, on=['store','sku'])\n .pipe(alt.Chart)\n .mark_line(point=True)\n .encode(x='date', y='price', color='name', tooltip=['name','price'])\n .properties(width=650, title='Top increases')\n .configure_legend(orient='top', columns=3)\n)\n\n\n\n\n\n\n\n\n\nCode\n(df\n .loc[df.name.isin(names)]\n .pipe(alt.Chart)\n .mark_line(point=True)\n .encode(x='date', y='price', color='name', tooltip=['name','price'])\n .properties(width=650, title='Pollo')\n .configure_legend(orient='top', columns=3)\n)\n\n\n\n\n\n\n\n\n\nCode\n(df\n .loc[df.name.isin(names)]\n .pipe(alt.Chart)\n .mark_line(point=True)\n .encode(x='date', y='price', color='name', tooltip=['name','price'])\n .properties(width=650, title='Palta')\n .configure_legend(orient='top', columns=3)\n)\n\n\n\n\n\n\n\n\n\nCode\n(df\n .loc[df.name.isin(names)]\n .pipe(alt.Chart)\n .mark_line(point=True)\n .encode(x='date', y='price', color='name', tooltip=['name','price'])\n .properties(width=650, title='Aceite')\n .configure_legend(orient='top', columns=3)\n)\n\n\n\n\n\nAceite vegeta"
  }
]