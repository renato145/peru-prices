[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Posts",
    "section": "",
    "text": "Date\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\nSep 30, 2022\n\n\nExplore data\n\n\nRenato Hermoza\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "nbs/30092022_explore-data.html",
    "href": "nbs/30092022_explore-data.html",
    "title": "Explore data",
    "section": "",
    "text": "Code\nexplore_types = ['frutas', 'lacteos', 'verduras', 'embutidos', 'panaderia', 'desayuno', 'congelados', 'abarrotes',\n                 'aves', 'carnes', 'pescados']\n\n\n\n\nCode\npath = Path('../../output')\ncsv_files = L(path.glob('*.csv')).filter(lambda o: os.stat(o).st_size>0)\npat_store = re.compile('(.+)\\_\\d+')\npat_date = re.compile('.+\\_(\\d+)')\ndf = (\n    pd.concat([pd.read_csv(o).assign(store=pat_store.match(o.stem)[1], date=pat_date.match(o.stem)[1])\n               for o in csv_files])\n    .pipe(lambda df: df.assign(\n        name=df.name.str.lower(),\n        sku=df.id.where(df.sku.isna(), df.sku).astype(int),\n        date=pd.to_datetime(df.date)\n    ))\n    .drop('id', axis=1)\n    .loc[lambda d: d.category.str.contains('|'.join(explore_types))]\n)\ndf.sample(3)\n\n\n\n\n\nData table\n  \n    \n      \n      brand\n      uri\n      name\n      price\n      category\n      store\n      date\n      sku\n    \n  \n  \n    \n      2694\n      MOLINOS DEL MUNDO\n      https://www.plazavea.com.pe/pan-de-queso-molin...\n      pan de queso molinos del mundo bolsa 500g\n      27.49\n      https://www.plazavea.com.pe/panaderia-y-pastel...\n      plaza_vea\n      2022-12-01\n      43207\n    \n    \n      106\n      LA FLORENCIA\n      NaN\n      keke marmoleado la florencia\n      10.50\n      https://www.plazavea.com.pe/panaderia-y-pastel...\n      plaza_vea\n      2022-12-19\n      46475\n    \n    \n      6674\n      COMPASS\n      NaN\n      mermelada compass fresa pote 350g\n      6.90\n      https://www.plazavea.com.pe/desayunos\n      plaza_vea\n      2022-11-03\n      49952\n    \n  \n\n\n\n\n\n\nCode\ntop_changes = (df\n .groupby(['store','sku'], as_index=False)\n .price\n .agg('std')\n .query('price>0')\n .sort_values('price', ascending=False)\n)\ntop_changes.head()\n\n\n\n\n\n\n  \n    \n      \n      store\n      sku\n      price\n    \n  \n  \n    \n      8849\n      plaza_vea\n      10039597\n      22.721922\n    \n    \n      11384\n      plaza_vea\n      10734129\n      19.910084\n    \n    \n      7640\n      plaza_vea\n      43433\n      18.435330\n    \n    \n      8902\n      plaza_vea\n      10043433\n      15.242047\n    \n    \n      10535\n      plaza_vea\n      10523088\n      15.000000\n    \n  \n\n\n\n\n\n\nCode\nfig,ax = plt.subplots(figsize=(12,5))\nfor _,row in top_changes.head(10).iterrows():\n    (df\n     .query('store==@row.store and sku==@row.sku')\n     .assign(name=lambda d: d.name+' ('+d.store+')')\n     .pipe(lambda d: d.plot(x='date', y='price', label=d.name.iloc[0], ax=ax))\n    )\nax.legend(bbox_to_anchor=(0.5,-0.3));\n\n\n\n\nTop changes\n\n\n\n\n\n\n\nCode\ntop_drops = (df\n .sort_values('date')\n .pipe(lambda d: d.assign(**d\n     .groupby(['store','sku'], as_index=False).price\n     .transform(lambda d: d.rolling(3).mean())\n     .loc[:,['price']]\n ))\n .dropna()\n .groupby(['store','sku'], as_index=False)\n .price\n .agg(['first','last'])\n .assign(diff=lambda d: d['last']-d['first'])\n .reset_index()\n .sort_values('diff')\n)\ntop_drops.head()\n\n\n\n\n\n\n  \n    \n      \n      store\n      sku\n      first\n      last\n      diff\n    \n  \n  \n    \n      6058\n      plaza_vea\n      43433\n      159.0\n      123.763333\n      -35.236667\n    \n    \n      7847\n      plaza_vea\n      10523087\n      79.9\n      59.900000\n      -20.000000\n    \n    \n      6793\n      plaza_vea\n      10040970\n      34.9\n      17.450000\n      -17.450000\n    \n    \n      8369\n      plaza_vea\n      10734129\n      174.0\n      156.800000\n      -17.200000\n    \n    \n      7955\n      plaza_vea\n      10571894\n      44.9\n      29.900000\n      -15.000000\n    \n  \n\n\n\n\n\n\nCode\nfig,ax = plt.subplots(figsize=(12,5))\nfor _,row in top_drops.head(10).iterrows():\n    (df\n     .query('store==@row.store and sku==@row.sku')\n     .assign(name=lambda d: d.name+' ('+d.store+')')\n     .pipe(lambda d: d.plot(x='date', y='price', label=d.name.iloc[0], ax=ax))\n    )\nax.legend(bbox_to_anchor=(0.5,-0.3));\n\n\n\n\nTop drops\n\n\n\n\n\n\n\nCode\nfig,ax = plt.subplots(figsize=(12,5))\nfor _,row in top_drops.tail(10).iterrows():\n    (df\n     .query('store==@row.store and sku==@row.sku')\n     .assign(name=lambda d: d.name+' ('+d.store+')')\n     .pipe(lambda d: d.plot(x='date', y='price', label=d.name.iloc[0], ax=ax))\n    )\nax.legend(bbox_to_anchor=(0.5,-0.3));\n\n\n\n\nTop increases\n\n\n\n\n\n\n\nCode\nfig,ax = plt.subplots(figsize=(12,5))\nfor n,d in df.loc[df.name.isin(names)].assign(name=lambda d: d.name+' ('+d.store+')').groupby('name'):\n    d.plot(x='date', y='price', label=n, ax=ax)\nax.legend(bbox_to_anchor=(0.5,-0.3));\n\n\n\n\nPollo\n\n\n\n\n\n\n\nCode\nfig,ax = plt.subplots(figsize=(12,5))\nfor n,d in df.loc[df.name.isin(names)].assign(name=lambda d: d.name+' ('+d.store+')').groupby('name'):\n    d.plot(x='date', y='price', label=n, ax=ax)\nax.legend(bbox_to_anchor=(0.5,-0.3));\n\n\n\n\nPalta\n\n\n\n\n\n\n\nCode\nfig,ax = plt.subplots(figsize=(12,5))\nfor n,d in df.loc[df.name.isin(names)].assign(name=lambda d: d.name+' ('+d.store+')').groupby('name'):\n    d.plot(x='date', y='price', label=n, ax=ax)\nax.legend(bbox_to_anchor=(0.5,-0.3));\n\n\n\n\nAceite vegeta"
  }
]