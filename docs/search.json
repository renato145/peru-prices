[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Posts",
    "section": "",
    "text": "Date\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\nSep 30, 2022\n\n\nExplore data\n\n\nRenato Hermoza\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "nbs/30092022_explore-data.html",
    "href": "nbs/30092022_explore-data.html",
    "title": "Explore data",
    "section": "",
    "text": "Last execution time: 01/03/2023 20:04:55\n\n\n\n\nCode\nexplore_types = ['frutas', 'lacteos', 'verduras', 'embutidos', 'panaderia', 'desayuno', 'congelados', 'abarrotes',\n                 'aves', 'carnes', 'pescados']\n\n\n\n\nCode\npath = Path('../../output')\ncsv_files = L(path.glob('*.csv')).filter(lambda o: os.stat(o).st_size>0)\npat_store = re.compile('(.+)\\_\\d+')\npat_date = re.compile('.+\\_(\\d+)')\ndf = (\n    pd.concat([pd.read_csv(o).assign(store=pat_store.match(o.stem)[1], date=pat_date.match(o.stem)[1])\n               for o in csv_files], ignore_index=True)\n    .pipe(lambda d: d.assign(\n        name=d.name.str.lower()+' ('+d.store+')',\n        sku=d.id.where(d.sku.isna(), d.sku).astype(int),\n        date=pd.to_datetime(d.date)\n    ))\n    .drop('id', axis=1)\n    .loc[lambda d: d.category.str.contains('|'.join(explore_types))]\n    # Filter products with recent data\n    .loc[lambda d: d.name.isin(d.groupby('name').date.max().loc[ge(datetime.now()-timedelta(days=30))].index)]\n    # Filter empty prices\n    .loc[lambda d: d.price>0]\n)\nprint(df.shape)\ndf.sample(3)\n\n\n(307556, 8)\n\n\n\n\n\nData table\n  \n    \n      \n      brand\n      uri\n      name\n      price\n      category\n      store\n      date\n      sku\n    \n  \n  \n    \n      72856\n      EL ARTESANO\n      NaN\n      chifles cancha y carne seca el artesano artich...\n      14.7\n      https://www.plazavea.com.pe/abarrotes\n      plaza_vea\n      2022-10-13\n      10246722\n    \n    \n      355643\n      Metro\n      https://www.metro.pe/hot-dog-de-pollo-metro-pa...\n      hot dog de pollo metro paquete 250 g (metro)\n      4.9\n      https://www.metro.pe/embutidos-y-fiambres/embu...\n      metro\n      2022-12-26\n      39947\n    \n    \n      57478\n      ÁNGEL\n      NaN\n      cereal ángel halloween bolsa 130g (plaza_vea)\n      3.0\n      https://www.plazavea.com.pe/desayunos\n      plaza_vea\n      2023-02-02\n      10715570\n    \n  \n\n\n\n\n\n\nCode\ntop_changes = (df\n .loc[lambda d: ~d.name.isin([\n     'sillau #06 kikko botella 350 ml (metro)',\n     'sillau kikko botella 500 ml (metro)',\n     'salsa de soya con ajo y kión kikko 350ml (metro)'\n ])]\n # Use last 90 days of data\n .loc[lambda d: d.date>=(datetime.now()-timedelta(days=90))]\n .sort_values('date')\n # Get percentage change\n .pipe(lambda d: d.assign(**d\n     .groupby(['store','sku'], as_index=False)\n     .price\n     .transform(lambda d: (d-d.shift())/d.shift())\n     .loc[:,['price']]\n ))\n .groupby(['store','sku'], as_index=False)\n .price.mean()\n .rename({'price': 'change'}, axis=1)\n .dropna()\n .loc[lambda d: d.change.abs().sort_values(ascending=False).index]\n)\ntop_changes.head()\n\n\n\n\n\n\n  \n    \n      \n      store\n      sku\n      change\n    \n  \n  \n    \n      3911\n      metro\n      1017225\n      1.058824\n    \n    \n      3912\n      metro\n      1017226\n      0.700319\n    \n    \n      6811\n      plaza_vea\n      62784\n      0.263158\n    \n    \n      10072\n      plaza_vea\n      10792658\n      0.232609\n    \n    \n      6610\n      plaza_vea\n      50027\n      0.204990\n    \n  \n\n\n\n\n\n\nCode\n(top_changes\n .head(10)\n .drop('change', axis=1)\n .merge(df, on=['store','sku'])\n .pipe(alt.Chart)\n .mark_line(point=True)\n .encode(x='date', y='price', color='name', tooltip=['name','price'])\n .properties(width=650, title='Top changes')\n .configure_legend(orient='top', columns=3)\n)\n\n\n\n\n\n\n\n\n\nCode\n(top_changes\n .sort_values('change')\n .head(10)\n .loc[:, ['store','sku']]\n .merge(df, on=['store','sku'])\n .pipe(alt.Chart)\n .mark_line(point=True)\n .encode(x='date', y='price', color='name', tooltip=['name','price'])\n .properties(width=650, title='Top drops')\n .configure_legend(orient='top', columns=3)\n)\n\n\n\n\n\n\n\n\n\nCode\n(top_changes\n .sort_values('change')\n .tail(10)\n .loc[:, ['store','sku']]\n .merge(df, on=['store','sku'])\n .pipe(alt.Chart)\n .mark_line(point=True)\n .encode(x='date', y='price', color='name', tooltip=['name','price'])\n .properties(width=650, title='Top increases')\n .configure_legend(orient='top', columns=3)\n)\n\n\n\n\n\n\n\n\n\nCode\n(df\n .loc[df.name.isin(names)]\n .pipe(alt.Chart)\n .mark_line(point=True)\n .encode(x='date', y='price', color='name', tooltip=['name','price'])\n .properties(width=650, title='Pollo')\n .configure_legend(orient='top', columns=3)\n)\n\n\n\n\n\n\n\n\n\nCode\n(df\n .loc[df.name.isin(names)]\n .pipe(alt.Chart)\n .mark_line(point=True)\n .encode(x='date', y='price', color='name', tooltip=['name','price'])\n .properties(width=650, title='Palta')\n .configure_legend(orient='top', columns=3)\n)\n\n\n\n\n\n\n\n\n\nCode\n(df\n .loc[df.name.isin(names)]\n .pipe(alt.Chart)\n .mark_line(point=True)\n .encode(x='date', y='price', color='name', tooltip=['name','price'])\n .properties(width=650, title='Aceite')\n .configure_legend(orient='top', columns=3)\n)\n\n\n\n\n\nAceite vegeta"
  }
]