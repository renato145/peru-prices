[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Posts",
    "section": "",
    "text": "Date\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\nSep 30, 2022\n\n\nExplore data\n\n\nRenato Hermoza\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#notebooks",
    "href": "index.html#notebooks",
    "title": "Posts",
    "section": "",
    "text": "Date\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\nSep 30, 2022\n\n\nExplore data\n\n\nRenato Hermoza\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "nbs/30092022_explore-data.html",
    "href": "nbs/30092022_explore-data.html",
    "title": "Explore data",
    "section": "",
    "text": "Last execution time: 10/10/2024 05:41:48\n\n\n\n\nProducts type filter\nexplore_types = ['frutas', 'lacteos', 'verduras', 'embutidos', 'panaderia', 'desayuno', 'congelados', 'abarrotes',\n                 'aves', 'carnes', 'pescados']\n\n\n\n\nData table\npath = Path('../../output')\ncsv_files = L(path.glob('*.csv')).filter(lambda o: os.stat(o).st_size&gt;0)\npat_store = re.compile('(.+)\\_\\d+')\npat_date = re.compile('.+\\_(\\d+)')\ndf = (\n    pd.concat([pd.read_csv(o).assign(store=pat_store.match(o.stem)[1], date=pat_date.match(o.stem)[1])\n               for o in csv_files], ignore_index=True)\n    .pipe(lambda d: d.assign(\n        name=d.name.str.lower()+' ('+d.store+')',\n        sku=d.id.where(d.sku.isna(), d.sku).astype(int),\n        date=pd.to_datetime(d.date)\n    ))\n    .drop('id', axis=1)\n    .loc[lambda d: d.category.str.contains('|'.join(explore_types))]\n    # Filter products with recent data\n#     .loc[lambda d: d.name.isin(d.groupby('name').date.max().loc[ge(datetime.now()-timedelta(days=30))].index)]\n    # Filter empty prices\n    .loc[lambda d: d.price&gt;0]\n)\nprint(df.shape)\ndf.sample(3)\n\n\n(1084951, 8)\n\n\n\n\n\n\n\n\n\nsku\nname\nbrand\ncategory\nuri\nprice\nstore\ndate\n\n\n\n\n1410667\n949932\nbrownie cl치sico con chocolate tri치ngulo giardi...\nSin Marca\nhttps://www.metro.pe/panaderia-y-pasteleria/co...\nhttps://www.metro.pe/brownie-clasico-con-choco...\n6.9\nmetro\n2023-04-13\n\n\n489221\n950029\nsal de maras molida oli21 1.25kg (wong)\nOLI21\nhttps://www.wong.pe/abarrotes/condimentos-vina...\nhttps://www.wong.pe/sal-de-maras-molida-oli21-...\n17.9\nwong\n2022-09-19\n\n\n2406029\n10761928\nyogurt parcialmente descremado gloria sabor a ...\nGLORIA\nhttps://www.plazavea.com.pe/lacteos-y-huevos\nhttps://www.plazavea.com.pe/yogurt-parcialment...\n9.5\nplaza_vea\n2024-05-27"
  },
  {
    "objectID": "nbs/30092022_explore-data.html#get-data",
    "href": "nbs/30092022_explore-data.html#get-data",
    "title": "Explore data",
    "section": "",
    "text": "Last execution time: 10/10/2024 05:41:48\n\n\n\n\nProducts type filter\nexplore_types = ['frutas', 'lacteos', 'verduras', 'embutidos', 'panaderia', 'desayuno', 'congelados', 'abarrotes',\n                 'aves', 'carnes', 'pescados']\n\n\n\n\nData table\npath = Path('../../output')\ncsv_files = L(path.glob('*.csv')).filter(lambda o: os.stat(o).st_size&gt;0)\npat_store = re.compile('(.+)\\_\\d+')\npat_date = re.compile('.+\\_(\\d+)')\ndf = (\n    pd.concat([pd.read_csv(o).assign(store=pat_store.match(o.stem)[1], date=pat_date.match(o.stem)[1])\n               for o in csv_files], ignore_index=True)\n    .pipe(lambda d: d.assign(\n        name=d.name.str.lower()+' ('+d.store+')',\n        sku=d.id.where(d.sku.isna(), d.sku).astype(int),\n        date=pd.to_datetime(d.date)\n    ))\n    .drop('id', axis=1)\n    .loc[lambda d: d.category.str.contains('|'.join(explore_types))]\n    # Filter products with recent data\n#     .loc[lambda d: d.name.isin(d.groupby('name').date.max().loc[ge(datetime.now()-timedelta(days=30))].index)]\n    # Filter empty prices\n    .loc[lambda d: d.price&gt;0]\n)\nprint(df.shape)\ndf.sample(3)\n\n\n(1084951, 8)\n\n\n\n\n\n\n\n\n\nsku\nname\nbrand\ncategory\nuri\nprice\nstore\ndate\n\n\n\n\n1410667\n949932\nbrownie cl치sico con chocolate tri치ngulo giardi...\nSin Marca\nhttps://www.metro.pe/panaderia-y-pasteleria/co...\nhttps://www.metro.pe/brownie-clasico-con-choco...\n6.9\nmetro\n2023-04-13\n\n\n489221\n950029\nsal de maras molida oli21 1.25kg (wong)\nOLI21\nhttps://www.wong.pe/abarrotes/condimentos-vina...\nhttps://www.wong.pe/sal-de-maras-molida-oli21-...\n17.9\nwong\n2022-09-19\n\n\n2406029\n10761928\nyogurt parcialmente descremado gloria sabor a ...\nGLORIA\nhttps://www.plazavea.com.pe/lacteos-y-huevos\nhttps://www.plazavea.com.pe/yogurt-parcialment...\n9.5\nplaza_vea\n2024-05-27"
  },
  {
    "objectID": "nbs/30092022_explore-data.html#top-changes-ratio",
    "href": "nbs/30092022_explore-data.html#top-changes-ratio",
    "title": "Explore data",
    "section": "Top changes (ratio)",
    "text": "Top changes (ratio)\n\n\nCode\ntop_changes = (df\n # Use last 30 days of data to compare prices\n .loc[lambda d: d.date&gt;=(datetime.now()-timedelta(days=30))]\n .sort_values('date')\n # Get percentage change\n .assign(change=lambda d: d\n     .groupby(['store','sku'], as_index=False)\n     .price.transform(lambda d: (d-d.shift())/d.shift())\n )\n .groupby(['store','sku'], as_index=False)\n .agg({'price':'last', 'change':'mean', 'date':'last'})\n .rename({'price':'last_price', 'date':'last_date'}, axis=1)\n .dropna()\n .loc[lambda d: d.last_date==d.last_date.max()]\n .loc[lambda d: d.change.abs().sort_values(ascending=False).index]\n)\ntop_changes.head(3)\n\n\n\n\n\n\n\n\n\nstore\nsku\nlast_price\nchange\nlast_date\n\n\n\n\n1601\nplaza_vea\n19104\n24.9\n-0.132743\n2024-10-10\n\n\n5580\nplaza_vea\n11496098\n17.9\n-0.109170\n2024-10-10\n\n\n5581\nplaza_vea\n11496099\n17.9\n-0.109170\n2024-10-10\n\n\n\n\n\n\n\n\n\nCode\ndef plot_changes(df_changes, title):\n    selection = alt.selection_point(fields=['name'], bind='legend')\n    dff = df_changes.drop('change', axis=1).merge(df, on=['store','sku'])\n    return (dff\n     .pipe(alt.Chart)\n     .mark_line(point=True)\n     .encode(\n         x='date',\n         y='price',\n         color=alt.Color('name').scale(domain=sorted(dff.name.unique().tolist())),\n         tooltip=['name','price','last_price']\n     )\n     .add_params(selection)\n     .transform_filter(selection)\n     .interactive()\n     .properties(width=650, title=title)\n     .configure_legend(orient='top', columns=3)\n    )\n\n\n\n\nCode\ntop_changes.head(10).pipe(plot_changes, 'Top changes')\n\n\n\n\n\n\n\n\n\n\nCode\n(top_changes\n .sort_values('change')\n .head(10)\n .pipe(plot_changes, 'Top drops')\n)\n\n\n\n\n\n\n\n\n\n\nCode\n(top_changes\n .sort_values('change')\n .tail(10)\n .pipe(plot_changes, 'Top increases')\n)"
  },
  {
    "objectID": "nbs/30092022_explore-data.html#top-changes-absolute-values",
    "href": "nbs/30092022_explore-data.html#top-changes-absolute-values",
    "title": "Explore data",
    "section": "Top changes (absolute values)",
    "text": "Top changes (absolute values)\n\n\nCode\ntop_changes_abs = (df\n # Use last 30 days of data to compare prices\n .loc[lambda d: d.date&gt;=(datetime.now()-timedelta(days=30))]\n .sort_values('date')\n # Get percentage change\n .assign(change=lambda d: d\n     .groupby(['store','sku'], as_index=False)\n     .price.transform(lambda d: (d-d.shift()).iloc[-1])\n )\n .groupby(['store','sku'], as_index=False)\n .agg({'price':'last', 'change':'mean', 'date':'last'})\n .rename({'price':'last_price', 'date':'last_date'}, axis=1)\n .dropna()\n .loc[lambda d: d.last_date==d.last_date.max()]\n .loc[lambda d: d.change.abs().sort_values(ascending=False).index]\n)\ntop_changes_abs.head(3)\n\n\n\n\n\n\n\n\n\nstore\nsku\nlast_price\nchange\nlast_date\n\n\n\n\n4145\nplaza_vea\n10777845\n37.70\n-30.80\n2024-10-10\n\n\n4221\nplaza_vea\n10850214\n20.40\n-16.59\n2024-10-10\n\n\n2474\nplaza_vea\n10012680\n140.99\n-16.51\n2024-10-10\n\n\n\n\n\n\n\n\n\nCode\ntop_changes_abs.head(10).pipe(plot_changes, 'Top changes')\n\n\n\n\n\n\n\n\n\n\nCode\n(top_changes_abs\n .sort_values('change')\n .head(10)\n .pipe(plot_changes, 'Top drops')\n)\n\n\n\n\n\n\n\n\n\n\nCode\n(top_changes_abs\n .sort_values('change')\n .tail(10)\n .pipe(plot_changes, 'Top increases')\n)"
  },
  {
    "objectID": "nbs/30092022_explore-data.html#search-specific-products",
    "href": "nbs/30092022_explore-data.html#search-specific-products",
    "title": "Explore data",
    "section": "Search specific products",
    "text": "Search specific products\n\n\nCode\n(df\n .loc[df.name.isin(names)]\n .pipe(alt.Chart)\n .mark_line(point=True)\n .encode(x='date', y='price', color='name', tooltip=['name','price'])\n .properties(width=650, title='Pollo')\n .interactive()\n .configure_legend(orient='top', columns=3)\n)\n\n\n\n\n\n\n\n\n\n\nCode\n(df\n .loc[df.name.isin(names)]\n .pipe(alt.Chart)\n .mark_line(point=True)\n .encode(x='date', y='price', color='name', tooltip=['name','price'])\n .properties(width=650, title='Palta')\n .interactive()\n .configure_legend(orient='top', columns=3)\n)\n\n\n\n\n\n\n\n\n\n\nCode\n(df\n .loc[df.name.isin(names)]\n .pipe(alt.Chart)\n .mark_line(point=True)\n .encode(x='date', y='price', color='name', tooltip=['name','price'])\n .properties(width=650, title='Aceite')\n .interactive()\n .configure_legend(orient='top', columns=3)\n)\n\n\n\n\n\n\n\n\n\n\nCode\n(df\n .loc[df.name.isin(names)]\n .pipe(alt.Chart)\n .mark_line(point=True)\n .encode(x='date', y='price', color='name', tooltip=['name','price'])\n .properties(width=650, title='Aceite')\n .interactive()\n .configure_legend(orient='top', columns=3)\n)\n\n\n\n\n\n\n\n\n\n\nCode\n(df\n .loc[df.name.isin(names)]\n .pipe(alt.Chart)\n .mark_line(point=True)\n .encode(x='date', y='price', color='name', tooltip=['name','price'])\n .properties(width=650, title='Aceite')\n .interactive()\n .configure_legend(orient='top', columns=3)\n)"
  }
]